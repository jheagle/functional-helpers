test('Generated main browser file exports intended functions', () => {
  const mockWindow = require('../browser/functional-helpers.min.js')
  expect(mockWindow).toHaveProperty('functionalHelpers')
  expect(Object.keys(mockWindow.functionalHelpers).length).toEqual(27)
  expect(typeof mockWindow.functionalHelpers.noConflict).toBe('function')
  expect(typeof mockWindow.functionalHelpers.buildArray).toBe('function')
  expect(typeof mockWindow.functionalHelpers.buildArrayOfReferences).toBe('function')
  expect(typeof mockWindow.functionalHelpers.uniqueArray).toBe('function')
  expect(typeof mockWindow.functionalHelpers.mergeArrays).toBe('function')
  expect(typeof mockWindow.functionalHelpers.compareArrays).toBe('function')
  expect(typeof mockWindow.functionalHelpers.curry).toBe('function')
  expect(typeof mockWindow.functionalHelpers.pipe).toBe('function')
  expect(typeof mockWindow.functionalHelpers.callWithParams).toBe('function')
  expect(typeof mockWindow.functionalHelpers.queueTimeout).toBe('function')
  expect(typeof mockWindow.functionalHelpers.getAbsoluteMax).toBe('function')
  expect(typeof mockWindow.functionalHelpers.getAbsoluteMin).toBe('function')
  expect(typeof mockWindow.functionalHelpers.randomNumber).toBe('function')
  expect(typeof mockWindow.functionalHelpers.randomInteger).toBe('function')
  expect(typeof mockWindow.functionalHelpers.compare).toBe('function')
  expect(typeof mockWindow.functionalHelpers.setValue).toBe('function')
  expect(typeof mockWindow.functionalHelpers.setAndReturnValue).toBe('function')
  expect(typeof mockWindow.functionalHelpers.mapObject).toBe('function')
  expect(typeof mockWindow.functionalHelpers.mapProperty).toBe('function')
  expect(typeof mockWindow.functionalHelpers.filterObject).toBe('function')
  expect(typeof mockWindow.functionalHelpers.reduceObject).toBe('function')
  expect(typeof mockWindow.functionalHelpers.notEmptyObjectOrArray).toBe('function')
  expect(typeof mockWindow.functionalHelpers.cloneObject).toBe('function')
  expect(typeof mockWindow.functionalHelpers.mergeObjects).toBe('function')
  expect(typeof mockWindow.functionalHelpers.mergeObjectsMutable).toBe('function')
})

test('Generated arrays browser file exports intended functions', () => {
  const mockWindow = require('../browser/helpers/arrays.min.js')
  expect(mockWindow).toHaveProperty('arrayHelpers')
  expect(Object.keys(mockWindow.arrayHelpers).length).toEqual(5)
  expect(typeof mockWindow.arrayHelpers.buildArray).toBe('function')
  expect(typeof mockWindow.arrayHelpers.buildArrayOfReferences).toBe('function')
  expect(typeof mockWindow.arrayHelpers.uniqueArray).toBe('function')
  expect(typeof mockWindow.arrayHelpers.mergeArrays).toBe('function')
  expect(typeof mockWindow.arrayHelpers.compareArrays).toBe('function')
})

test('Generated functions browser file exports intended functions', () => {
  const mockWindow = require('../browser/helpers/functions.min.js')
  expect(mockWindow).toHaveProperty('functionHelpers')
  expect(Object.keys(mockWindow.functionHelpers).length).toEqual(6)
  expect(typeof mockWindow.functionHelpers.curry).toBe('function')
  expect(typeof mockWindow.functionHelpers.pipe).toBe('function')
  expect(typeof mockWindow.functionHelpers.callWithParams).toBe('function')
  expect(typeof mockWindow.functionHelpers.delay).toBe('function')
  expect(typeof mockWindow.functionHelpers.queueManager).toBe('function')
  expect(typeof mockWindow.functionHelpers.queueTimeout).toBe('function')
})

test('Generated numbers browser file exports intended functions', () => {
  const mockWindow = require('../browser/helpers/numbers.min.js')
  expect(mockWindow).toHaveProperty('numberHelpers')
  expect(Object.keys(mockWindow.numberHelpers).length).toEqual(5)
  expect(typeof mockWindow.numberHelpers.getAbsoluteMax).toBe('function')
  expect(typeof mockWindow.numberHelpers.getAbsoluteMin).toBe('function')
  expect(typeof mockWindow.numberHelpers.randomNumber).toBe('function')
  expect(typeof mockWindow.numberHelpers.randomInteger).toBe('function')
  expect(typeof mockWindow.numberHelpers.compare).toBe('function')
})

test('Generated objects browser file exports intended functions', () => {
  const mockWindow = require('../browser/helpers/objects.min.js')
  expect(mockWindow).toHaveProperty('objectHelpers')
  expect(Object.keys(mockWindow.objectHelpers).length).toEqual(10)
  expect(typeof mockWindow.objectHelpers.setValue).toBe('function')
  expect(typeof mockWindow.objectHelpers.setAndReturnValue).toBe('function')
  expect(typeof mockWindow.objectHelpers.mapObject).toBe('function')
  expect(typeof mockWindow.objectHelpers.mapProperty).toBe('function')
  expect(typeof mockWindow.objectHelpers.filterObject).toBe('function')
  expect(typeof mockWindow.objectHelpers.reduceObject).toBe('function')
  expect(typeof mockWindow.objectHelpers.notEmptyObjectOrArray).toBe('function')
  expect(typeof mockWindow.objectHelpers.cloneObject).toBe('function')
  expect(typeof mockWindow.objectHelpers.mergeObjects).toBe('function')
  expect(typeof mockWindow.objectHelpers.mergeObjectsMutable).toBe('function')
})
