import { JSDOM } from 'jsdom'
const { window } = new JSDOM()
global.window = window

test('Generated main browser file exports intended functions', () => {
  require('../browser/functional-helpers.min.js')
  expect(global.window).toHaveProperty('functionalHelpers')
  expect(Object.keys(global.window.functionalHelpers).length).toEqual(27)
  expect(typeof global.window.functionalHelpers.noConflict).toBe('function')
  expect(typeof global.window.functionalHelpers.buildArray).toBe('function')
  expect(typeof global.window.functionalHelpers.buildArrayOfReferences).toBe('function')
  expect(typeof global.window.functionalHelpers.uniqueArray).toBe('function')
  expect(typeof global.window.functionalHelpers.mergeArrays).toBe('function')
  expect(typeof global.window.functionalHelpers.compareArrays).toBe('function')
  expect(typeof global.window.functionalHelpers.curry).toBe('function')
  expect(typeof global.window.functionalHelpers.pipe).toBe('function')
  expect(typeof global.window.functionalHelpers.callWithParams).toBe('function')
  expect(typeof global.window.functionalHelpers.queueTimeout).toBe('function')
  expect(typeof global.window.functionalHelpers.getAbsoluteMax).toBe('function')
  expect(typeof global.window.functionalHelpers.getAbsoluteMin).toBe('function')
  expect(typeof global.window.functionalHelpers.randomNumber).toBe('function')
  expect(typeof global.window.functionalHelpers.randomInteger).toBe('function')
  expect(typeof global.window.functionalHelpers.compare).toBe('function')
  expect(typeof global.window.functionalHelpers.setValue).toBe('function')
  expect(typeof global.window.functionalHelpers.setAndReturnValue).toBe('function')
  expect(typeof global.window.functionalHelpers.mapObject).toBe('function')
  expect(typeof global.window.functionalHelpers.mapProperty).toBe('function')
  expect(typeof global.window.functionalHelpers.filterObject).toBe('function')
  expect(typeof global.window.functionalHelpers.reduceObject).toBe('function')
  expect(typeof global.window.functionalHelpers.notEmptyObjectOrArray).toBe('function')
  expect(typeof global.window.functionalHelpers.cloneObject).toBe('function')
  expect(typeof global.window.functionalHelpers.mergeObjects).toBe('function')
  expect(typeof global.window.functionalHelpers.mergeObjectsMutable).toBe('function')
})

test('Generated arrays browser file exports intended functions', () => {
  require('../browser/helpers/arrays.min.js')
  expect(global.window).toHaveProperty('arrayHelpers')
  expect(Object.keys(global.window.arrayHelpers).length).toEqual(5)
  expect(typeof global.window.arrayHelpers.buildArray).toBe('function')
  expect(typeof global.window.arrayHelpers.buildArrayOfReferences).toBe('function')
  expect(typeof global.window.arrayHelpers.uniqueArray).toBe('function')
  expect(typeof global.window.arrayHelpers.mergeArrays).toBe('function')
  expect(typeof global.window.arrayHelpers.compareArrays).toBe('function')
})

test('Generated functions browser file exports intended functions', () => {
  require('../browser/helpers/functions.min.js')
  expect(global.window).toHaveProperty('functionHelpers')
  expect(Object.keys(global.window.functionHelpers).length).toEqual(6)
  expect(typeof global.window.functionHelpers.curry).toBe('function')
  expect(typeof global.window.functionHelpers.pipe).toBe('function')
  expect(typeof global.window.functionHelpers.callWithParams).toBe('function')
  expect(typeof global.window.functionHelpers.delay).toBe('function')
  expect(typeof global.window.functionHelpers.queueManager).toBe('function')
  expect(typeof global.window.functionHelpers.queueTimeout).toBe('function')
})

test('Generated numbers browser file exports intended functions', () => {
  require('../browser/helpers/numbers.min.js')
  expect(global.window).toHaveProperty('numberHelpers')
  expect(Object.keys(global.window.numberHelpers).length).toEqual(5)
  expect(typeof global.window.numberHelpers.getAbsoluteMax).toBe('function')
  expect(typeof global.window.numberHelpers.getAbsoluteMin).toBe('function')
  expect(typeof global.window.numberHelpers.randomNumber).toBe('function')
  expect(typeof global.window.numberHelpers.randomInteger).toBe('function')
  expect(typeof global.window.numberHelpers.compare).toBe('function')
})

test('Generated objects browser file exports intended functions', () => {
  require('../browser/helpers/objects.min.js')
  expect(global.window).toHaveProperty('objectHelpers')
  expect(Object.keys(global.window.objectHelpers).length).toEqual(10)
  expect(typeof global.window.objectHelpers.setValue).toBe('function')
  expect(typeof global.window.objectHelpers.setAndReturnValue).toBe('function')
  expect(typeof global.window.objectHelpers.mapObject).toBe('function')
  expect(typeof global.window.objectHelpers.mapProperty).toBe('function')
  expect(typeof global.window.objectHelpers.filterObject).toBe('function')
  expect(typeof global.window.objectHelpers.reduceObject).toBe('function')
  expect(typeof global.window.objectHelpers.notEmptyObjectOrArray).toBe('function')
  expect(typeof global.window.objectHelpers.cloneObject).toBe('function')
  expect(typeof global.window.objectHelpers.mergeObjects).toBe('function')
  expect(typeof global.window.objectHelpers.mergeObjectsMutable).toBe('function')
})
