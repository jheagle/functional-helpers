const helpers = require('../dist/helpers/numbers.js')

test('getAbsoluteMax returns the correct number', () => {
  expect(helpers.getAbsoluteMax(-200, 50)).toBe(-200)
  expect(helpers.getAbsoluteMax(-1, 1)).toBe(1)
  expect(helpers.getAbsoluteMax(0, 0)).toBe(0)
})
test('getAbsoluteMin returns the correct number', () => {
  expect(helpers.getAbsoluteMin(-200, 50)).toBe(50)
  expect(helpers.getAbsoluteMin(1, -1)).toBe(-1)
  expect(helpers.getAbsoluteMin(0, 0)).toBe(0)
})
test('randomNumber returns a number with the given specifications', () => {
  const test1 = helpers.randomNumber(100)
  expect(test1).toBeGreaterThanOrEqual(0)
  expect(test1).toBeLessThan(100)
  const test2 = helpers.randomNumber(9, 1)
  expect(test2).toBeGreaterThanOrEqual(1)
  expect(test2).toBeLessThan(10)
  const test3 = helpers.randomNumber(2, 1, 5)
  expect(test3).toBeGreaterThanOrEqual(5)
  expect(test3).toBeLessThanOrEqual(15)
})
test('randomInteger returns an integer with the given specifications', () => {
  const test1 = helpers.randomInteger(100)
  expect(test1).toBeGreaterThanOrEqual(0)
  expect(test1).toBeLessThan(100)
  const test2 = helpers.randomInteger(9, 1)
  expect(test2).toBeGreaterThanOrEqual(1)
  expect(test2).toBeLessThan(10)
  const test3 = helpers.randomInteger(2, 1, 5)
  expect(test3).toBeGreaterThanOrEqual(5)
  expect(test3).toBeLessThanOrEqual(15)
  expect([5, 10, 15]).toContain(test3)
})
test('compare returns 1, 0, or -1 based on the results', () => {
  expect(helpers.compare(-200, 50)).toBe(-1)
  expect(helpers.compare(1, -1)).toBe(1)
  expect(helpers.compare(10, 10)).toBe(0)
})
