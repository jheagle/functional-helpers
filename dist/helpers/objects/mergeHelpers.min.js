"use strict";require("core-js/modules/es.array.concat.js"),require("core-js/modules/es.array.filter.js"),require("core-js/modules/es.array.find.js"),require("core-js/modules/es.array.find-index.js"),require("core-js/modules/es.array.includes.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/es.array.map.js"),require("core-js/modules/es.array.reduce.js"),require("core-js/modules/es.array.splice.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/es.string.includes.js"),require("core-js/modules/web.dom-collections.for-each.js"),require("core-js/modules/web.dom-collections.iterator.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.processMergeIdentifiers=exports.processMergeIdentifer=exports.mergeReferences=exports.mergeReferenceObject=exports.mergeReferenceArrays=exports.mergeNonReferences=exports.createReferenceReplica=exports.getSimilarObject=void 0;var _arrays=require("../arrays"),_functions=require("../functions"),_objects=require("../objects"),_cloneHelpers=require("./cloneHelpers");function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}var hasUnmergedReferences=function(e){return e.some((function(e){return!1===e.merged}))},getSimilarObject=function(e,r){if(0===r.index)return e[0];var n=Array.isArray(r.original),t=(0,_objects.objectKeys)(r.object).filter((function(e){return!r.references.includes(e)&&!(0,_objects.isObject)(r.object[e])})),c=t.map((function(e){return r.object[e]}));return e.find((function(e){if(Array.isArray(e.original)!==n)return!1;if(e.original===r.original)return!0;if(!t.length)return e.index===r.index;var o=(0,_objects.objectKeys)(e.object).filter((function(r){return!e.references.includes(r)&&!(0,_objects.isObject)(e.object[r])})).map((function(r){return e.object[r]}));return(0,_arrays.compareArrays)(o,c).every((function(e){return e.result.every((function(e){return 0===e}))}))}))};exports.getSimilarObject=getSimilarObject;var createReferenceReplica=function e(r,n){return function(t,c){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=Array.isArray(c.original)?[]:{},s=(0,_cloneHelpers.createReferenceIdentifier)(i,t,o);s.complete=c.complete,s.merged=c.merged,s.object=i,s.circular=c.circular.map((function(e){return e})),s.original=c.original;var a=r.length;if(r.push(s),s.object=(0,_objects.objectKeys)(c.object).reduce((function(o,i){if(c.references.includes(i)&&!s.references.includes(i)&&s.references.push(i),!c.circular.includes(i))return(0,_objects.setValue)(i,c.object[i],o);var a=(0,_cloneHelpers.findReference)(n,c.object[i]),f=getSimilarObject(r,a),u=void 0!==f,l=u?f.index:r[r.length-1].index+1;return u||(f=e(r,n)(l,a)),f.referers.includes(t)||f.referers.push(t),(0,_objects.setValue)(i,l,o)}),s.object),s.object=s.references.reduce((function(o,i){if(c.circular.includes(i))return o;var a=(0,_cloneHelpers.findReference)(n,c.object[i]),f=getSimilarObject(r,a),u=void 0!==f,l=u?f.index:r[r.length-1].index+1;return u||(f=e(r,n)(l,a)),f.referers.includes(t)||f.referers.push(t),o[i]=l,l<=s.index&&s.circular.push(i),o}),s.object),c.referers.length!==s.referers.length){var f=c.referers.map((function(t){var c=(0,_cloneHelpers.findReference)(n,t),o=s.referers.map((function(e){return(0,_cloneHelpers.findReference)(r,e)})),i=getSimilarObject(o,c);if(void 0!==i)return i.index;var a=void 0!==(i=getSimilarObject(r,c)),f=a?i.index:r[r.length-1].index+1;return a||(i=e(r,n)(f,c)),i.index})),u=(0,_cloneHelpers.removeFromReferenceMap)(r);s.referers.forEach((function(e){return u((0,_cloneHelpers.findReference)(r,e))})),s.referers=f}return s.referers=(0,_arrays.uniqueArray)(s.referers),r[a]}};exports.createReferenceReplica=createReferenceReplica;var mergeNonReferences=function(e,r,n,t){var c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],o=(0,_cloneHelpers.findReferenceIndex)(e,r),i=(0,_cloneHelpers.findReferenceIndex)(n,t);if(o<0)return n[i].complete=!0,n[i].merged=!0,(0,_objects.mapObject)(n[i].object,(function(e){return e}));if(i<0)return e[o].complete=!0,e[o].merged=!0,e[o].object;if(e[o].merged&&n[i].merged)return e[o].object;e[o].complete=!0,e[o].merged=!0,n[i].complete=!0,n[i].merged=!0;var s=Array.isArray(e[o].object),a=s?(0,_arrays.compareArrays)(e[o].object,n[i].object):(0,_arrays.compareArrays)((0,_objects.objectKeys)(e[o].object),(0,_objects.objectKeys)(n[i].object));return e[o].object=a.reduce((function(t,a,f){var u=s?e[o].references.findIndex((function(e){return a.keys[0].includes(e)})):e[o].references.findIndex((function(e){return e===a.value})),l=s?f:a.value,d=s?e[o].object[a.keys[0][0]]:e[o].object[a.value],p=s?n[i].object[a.keys[1][0]]:n[i].object[a.value];if(1===a.result[0]){if(u>=0){var m=(0,_cloneHelpers.findReferenceIndex)(e,d);!1===e[m].merged&&(e[m].complete=!0,e[m].merged=!0)}return(0,_objects.setValue)(l,d,t)}var b=s?n[i].references.findIndex((function(e){return a.keys[1].includes(e)})):n[i].references.findIndex((function(e){return e===a.value})),j=p;if(b>=0&&u<0){var y=(0,_cloneHelpers.findReference)(n,p),g=getSimilarObject(e,y),v=void 0!==g;if(j=v?g.index:e[e.length-1].index+1,v||(g=createReferenceReplica(e,n)(j,y,[r])),s||e[o].references.includes(l)||(e[o].references.push(l),e[o].object[l]=j),s&&!e[o].object.includes(j)&&(e[o].references.push(e[o].object.length),e[o].object.push(j)),v)return t;d=j,y.complete=!0,y.merged=!0}if(-1===a.result[0])return s?(t.push(j),t):(0,_objects.setValue)(l,j,t);if(u<0)return b<0?(0,_objects.setValue)(l,p,t):(0,_objects.setValue)(l,d,t);if(b>=0)return(0,_objects.setValue)(l,d,t);var _=(0,_cloneHelpers.findReference)(e,d),R=_.referers.findIndex((function(e){return e===r}));return R>=0&&_.referers.splice(R,1),c.push(_),e[o].references.splice(u,1),(0,_objects.setValue)(l,p,t)}),s?[]:{}),e[o].object};exports.mergeNonReferences=mergeNonReferences;var mergeReferenceArrays=function e(r,n){if(!Array.isArray(n))return r.findIndex((function(e){return Array.isArray(e)?e[0]===n:e===n}))<0&&r.push(n),r;var t=r.findIndex((function(e){return Array.isArray(e)?e[0]===n[0]:e===n[0]}));if(Array.isArray(n[1])&&(n[1]=n[1].reduce(e,[])),t<0)return[].concat(_toConsumableArray(r),[n]);if(!Array.isArray(r[t]))return(0,_objects.setValue)(t,n,r);if(1===r[t].length)return(0,_objects.setValue)(t,n,r);var c=r[t][1];return Array.isArray(c)?(Array.isArray(n[1])&&(c=(0,_arrays.mergeArrays)(c,n[1])),!Array.isArray(n[1])&&Array.isArray(c)&&c.push(n[1]),(0,_objects.setValue)(t,[n[0],c.reduce(e,[])],r)):(0,_objects.setValue)(t,[n[0],c],r)};exports.mergeReferenceArrays=mergeReferenceArrays;var mergeReferenceObject=function e(r,n,t){return function(c,o,i){var s=!1,a=o;if(Array.isArray(o)&&null===(a=Array.isArray(o[0])?o[0]:o)[1]&&(o=a[0],s=!0),Array.isArray(o)){var f=c.object[a[0]],u=t.object[a[0]];"number"==typeof f&&(c.index=f,f=(0,_cloneHelpers.findReference)(r,f).object),"number"==typeof u&&(t.index=u,u=(0,_cloneHelpers.findReference)(n,u).object);var l=a[1].map((function(e){return e})),d=a[1],p=a[1].map((function(e){return e})),m=(0,_cloneHelpers.objectAndReferences)(f,d,c.index),b=(0,_cloneHelpers.objectAndReferences)(u,p,t.index),j=function(t){var c=l[t],i=a[1].findIndex((function(e){return e===c}));e(r,n,b)(m,c,i),o[1]=m.references};for(var y in l)j(y);return c.remove=[].concat(_toConsumableArray(c.remove),_toConsumableArray(m.remove)),c}var g=c.object[o],v=t.object[o];if("number"!=typeof v){if("number"==typeof g){var _=(0,_cloneHelpers.findReferenceIndex)(r,g);r[_].complete=!0,r[_].merged=!0}return c}var R=(0,_cloneHelpers.findReference)(n,v);if(void 0===R)return c;if(void 0===R.merged)return c;var A="number"==typeof g?(0,_cloneHelpers.findReference)(r,g):null;if("number"!=typeof g){var x=void 0!==(A=getSimilarObject(r,R));g=x?A.index:r[r.length-1].index+1,x||(A=createReferenceReplica(r,n)(g,R,[c.index])),c.references.includes(o)||(c.references.push(o),c.object[o]=g)}if(R.complete=!0,R.merged=!0,void 0===A.merged)return c;c.object[o]=mergeNonReferences(r,A.index,n,R.index,c.remove);var h=A.referers.findIndex((function(e){return e===c.index}));A.referers.splice(h,1);var I=A.references.map((function(e){return A.circular.includes(e)?[e,null]:e}));c.remove.push(A);var H=(0,_cloneHelpers.findReferenceIndex)(r,g);return r[H]=A,I.length&&!s?(c.references[i]=[o,I],c.references=c.references.reduce(mergeReferenceArrays,[]),c):(c.references.splice(i,1),c)}};exports.mergeReferenceObject=mergeReferenceObject;var mergeReferences=function e(r,n){if(void 0===r[0].merged||void 0===n[0].merged)return r;var t=[];r[0].object=mergeNonReferences(r,0,n,0,t);var c=(0,_arrays.mergeArrays)(r[0].references,n[0].references);c=c.reduce(mergeReferenceArrays,[]);var o=(0,_cloneHelpers.objectAndReferences)(r[0].object,c,0),i=(0,_cloneHelpers.objectAndReferences)(n[0].object,n[0].references,0),s=c.map((function(e){return e})),a=function(e){var t=s[e],c=r[0].references.findIndex((function(e){return e===t}));mergeReferenceObject(r,n,i)(o,t,c),r[0].references=o.references};for(var f in s)a(f);t=[].concat(_toConsumableArray(t),_toConsumableArray(o.remove));var u=(0,_cloneHelpers.removeFromReferenceMap)(r),l=t.reduce((function(e,r){var n=u(r);return e?n:e}),!0);return l&&(r=(0,_cloneHelpers.linkReferences)(r)),l&&1===r.length&&n.map((function(e){return e.complete=!0,e.merged=!0,e})),n.every((function(e){return e.merged}))&&(n=(0,_cloneHelpers.linkReferences)(n)),r.every((function(e){return e.merged}))&&r[0].references.length||hasUnmergedReferences(r)||hasUnmergedReferences(n)?e(r,n):r};exports.mergeReferences=mergeReferences;var processMergeIdentifer=function(e){return function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.mapLimit,c=void 0===t?100:t,o=n.depthLimit,i=void 0===o?-1:o;if(!e[r].moreReferences.length)return e[r].moreReferences;var s=0,a=!1;return e[r].referenceMap=(0,_functions.pipe)((function(n){return(0,_cloneHelpers.findReferenceIndex)(e[r].referenceMap,n.index)}),(function(n){return s=n,(0,_cloneHelpers.findObjectReferences)(e[r].referenceMap[s])}),(function(n){return(0,_cloneHelpers.getIdentifierDepth)(e[r].referenceMap,n)}),(function(e){return e===i}),(function(n){return a=n,(0,_cloneHelpers.findReferenceKeys)(e[r].referenceMap,s,a)}),(function(n){a&&(e[r].referenceMap[s].references=n.circular),e[r].referenceMap[s].merged=!1;var t=e[r].referenceMap[s].references.filter((function(e){return!n.circular.includes(e)}));return e[r].moreReferences=[].concat(_toConsumableArray(e[r].moreReferences),_toConsumableArray(t.map((function(t){return e[r].referenceMap[n.object[t]]})))),e[r].referenceMap.length>=c}),(function(n){return n?mergeReferences(e[0].referenceMap,e[1].referenceMap):e[r].referenceMap}))(e[r].moreReferences.shift()),e[r].moreReferences}};exports.processMergeIdentifer=processMergeIdentifer;var processMergeIdentifiers=function(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},t=n.mapLimit,c=void 0===t?100:t,o=n.depthLimit,i=void 0===o?-1:o,s=[(0,_cloneHelpers.createReferenceIdentifier)(e,0)],a=[(0,_cloneHelpers.createReferenceIdentifier)(r,0)],f=[{referenceMap:s,moreReferences:[s[0]]},{referenceMap:a,moreReferences:[a[0]]}];do{f[0].moreReferences=processMergeIdentifer(f)(0,{mapLimit:c,depthLimit:i}),f[1].moreReferences=processMergeIdentifer(f)(1,{mapLimit:c,depthLimit:i})}while(f[0].moreReferences.length>0||f[1].moreReferences.length>0);return[s,a]};exports.processMergeIdentifiers=processMergeIdentifiers;