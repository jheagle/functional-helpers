"use strict";require("core-js/modules/es.symbol"),require("core-js/modules/es.symbol.description"),require("core-js/modules/es.symbol.iterator"),require("core-js/modules/es.array.concat"),require("core-js/modules/es.array.find-index"),require("core-js/modules/es.array.for-each"),require("core-js/modules/es.array.from"),require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.index-of"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.array.map"),require("core-js/modules/es.array.reduce"),require("core-js/modules/es.array.slice"),require("core-js/modules/es.array.some"),require("core-js/modules/es.array.splice"),require("core-js/modules/es.function.name"),require("core-js/modules/es.object.assign"),require("core-js/modules/es.object.to-string"),require("core-js/modules/es.regexp.to-string"),require("core-js/modules/es.string.includes"),require("core-js/modules/es.string.iterator"),require("core-js/modules/web.dom-collections.for-each"),require("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.linkReferences=exports.removeFromReferenceMap=exports.linkReferenceObject=exports.objectAndReferences=exports.getIdentifierDepth=exports.findReference=exports.findReferenceIndex=exports.findReferenceKeys=exports.findObjectReferences=exports.createReferenceIdentifier=void 0;var _objects=require("../objects");function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}var nonReference=function(e){return!(0,_objects.isCloneable)(e)},createReferenceIdentifier=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return Object.assign({},{circular:[],complete:!1,index:r,object:null,original:e,references:[],referers:n})};exports.createReferenceIdentifier=createReferenceIdentifier;var findObjectReferences=function(e){return(0,_objects.setValue)("object",(0,_objects.mapObject)(e.original,(function(r,n){return nonReference(r)?r:(e.references.push(n),null)})),e)};exports.findObjectReferences=findObjectReferences;var findReferenceKeys=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return e[r].references.reduce((function(t,o,i){var c=t.original[o],s=e.findIndex((function(e){return e&&c===e.original}));if(s>=0)return t.object[o]=s,t.circular.push(o),e[s].referers.push(r),t;if(n)return t.object[o]=Array.isArray(t.original[o])?[]:{},t;var a=e[e.length-1].index+1;return t.object[o]=e[e.length-1].index+1,e[a]=createReferenceIdentifier(c,t.object[o],[r]),t}),e[r])};exports.findReferenceKeys=findReferenceKeys;var findReferenceIndex=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=e[r];if(n&&n.index===r)return r;if(n&&n.index>r)for(var t=r;--t>=0;)if(e[t]&&e[t].index===r)return t;return e.findIndex((function(e){return void 0!==e&&e.index===r}))};exports.findReferenceIndex=findReferenceIndex;var findReference=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[findReferenceIndex(e,r)]};exports.findReference=findReference;var getIdentifierDepth=function e(r,n){if(!n.referers.length)return 0;var t=Math.min.apply(Math,_toConsumableArray(n.referers));if(t>=n.index)return 0;if(0===t)return 1;var o=findReference(r,t);return o?1+e(r,o):t};exports.getIdentifierDepth=getIdentifierDepth;var hasCompletedReferences=function(e){return e.some((function(e){return e.index>0&&e.complete}))},objectAndReferences=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object.assign({},{index:n,object:e||{},references:r,remove:[]})};exports.objectAndReferences=objectAndReferences;var linkReferenceObject=function e(r){return function(n,t,o){var i=!1,c=t;if(Array.isArray(t)&&null===(c=Array.isArray(t[0])?t[0]:t)[1]&&(t=c[0],i=!0),Array.isArray(t)){var s,a=n.object[c[0]];"number"==typeof a&&(n.index=a);var f=c[1].reduce(e(r),objectAndReferences(a,c[1],n.index));return n.object[c[0]]=f.object,s=f.remove,n.remove=[].concat(_toConsumableArray(n.remove),_toConsumableArray(s)),n}var u=findReference(r,n.object[t]);if(!u.complete)return n;n.object[t]=u.object,u.referers.splice(u.referers.findIndex((function(e){return e===n.index})),1);var d=u.references.map((function(e){return u.circular.includes(e)?[e,null]:e}));return n.remove.push(u),d.length&&!i?(n.references[o]=[t,d],n):(n.references.splice(o,1),n)}};exports.linkReferenceObject=linkReferenceObject;var removeFromReferenceMap=function(e){return function(r){var n=findReferenceIndex(e,r.index);if(n<=0||r.referers.length)return!1;e.splice(n,1);var t=e[0].referers.indexOf(r.index);return t>=0&&e[0].referers.splice(t,1),!0}};exports.removeFromReferenceMap=removeFromReferenceMap;var linkReferences=function e(r){if(!r[0].complete)return r;var n=r[0].references.reduce(linkReferenceObject(r),objectAndReferences(r[0].object,r[0].references,0));return r[0].object=n.object,r[0].references=n.references,n.remove.forEach(removeFromReferenceMap(r)),hasCompletedReferences(r)?e(r):r};exports.linkReferences=linkReferences;