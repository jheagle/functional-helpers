"use strict";require("core-js/modules/es.symbol"),require("core-js/modules/es.symbol.description"),require("core-js/modules/es.symbol.iterator"),require("core-js/modules/es.array.concat"),require("core-js/modules/es.array.filter"),require("core-js/modules/es.array.from"),require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.array.map"),require("core-js/modules/es.array.reduce"),require("core-js/modules/es.array.slice"),require("core-js/modules/es.function.name"),require("core-js/modules/es.object.get-own-property-names"),require("core-js/modules/es.object.to-string"),require("core-js/modules/es.regexp.to-string"),require("core-js/modules/es.string.includes"),require("core-js/modules/es.string.iterator"),require("core-js/modules/web.dom-collections.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.mergeObjectsMutable=exports.mergeObjects=exports.cloneObject=exports.isCloneable=exports.isInstanceObject=exports.emptyObject=exports.reduceObject=exports.filterObject=exports.mapObject=exports.objectValues=exports.objectKeys=exports.setAndReturnValue=exports.setValue=void 0,require("core-js/stable");var _functions=require("./functions"),_cloneHelpers=require("./objects/cloneHelpers");function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,o=new Array(r);t<r;t++)o[t]=e[t];return o}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var setValue=function(e,r,t){return t[e]=r,t};exports.setValue=setValue;var setAndReturnValue=function(e,r,t){return e[r]=t,t};exports.setAndReturnValue=setAndReturnValue;var objectKeys=function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("function"!=typeof e&&("object"!==_typeof(e)||null===e))return[];if(r){var t=Object.getOwnPropertyNames(e);if(t.length)return t}var o=[];for(var n in e)if(r||Object.prototype.hasOwnProperty.call(e,n)){if(Array.isArray(e)){o.push(parseInt(n));continue}o.push(n)}return o};exports.objectKeys=objectKeys;var objectValues=function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return objectKeys(e,r).map((function(r){return e[r]}))};exports.objectValues=objectValues;var mapObject=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return Array.isArray(e)?e.map(r,t):objectKeys(e,!0).reduce((function(o,n){return setValue(n,(0,_functions.callWithParams)(r.bind(t),[e[n],n,e],2),o)}),{})};exports.mapObject=mapObject;var filterObject=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return Array.isArray(e)?e.filter(r,t):objectKeys(e,!0).reduce((function(o,n){return(0,_functions.callWithParams)(r.bind(t),[e[n],n,e],2)?o[n]=e[n]:delete o[n],o}),{})};exports.filterObject=filterObject;var reduceObject=function(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e[objectKeys(e)[0]]||e[0];return Array.isArray(e)?e.reduce(r,t):objectKeys(e,!0).reduce((function(t,o){return(0,_functions.callWithParams)(r,[t,e[o],o,e],2)}),t)};exports.reduceObject=reduceObject;var emptyObject=function(e){return!objectKeys(e).length};exports.emptyObject=emptyObject;var isInstanceObject=function(e){return("function"==typeof e||"object"===_typeof(e)&&null!==e)&&(!["Array","Function","Object"].includes(e.constructor.name)||"Array"!==e.constructor.name&&objectKeys(e,!0).length>objectKeys(e).length)};exports.isInstanceObject=isInstanceObject;var isCloneable=function(e){return"object"===_typeof(e)&&null!==e&&!isInstanceObject(e)&&!emptyObject(e)};exports.isCloneable=isCloneable;var cloneObject=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=r.mapLimit,o=void 0===t?100:t,n=r.depthLimit,c=void 0===n?-1:n,s=[(0,_cloneHelpers.createReferenceIdentifier)(e,0)],a=[s[0]],u=function(){var e=a.shift(),r=(0,_cloneHelpers.findReferenceIndex)(s,e.index);s[r]=(0,_cloneHelpers.findObjectReferences)(s[r]);var t=(0,_cloneHelpers.getIdentifierDepth)(s,s[r])===c;s[r]=(0,_cloneHelpers.findReferenceKeys)(s,r,t),t&&(s[r].references=s[r].circular),s[r].complete=!0;var n=s[r].references.filter((function(e){return!s[r].circular.includes(e)}));a=[].concat(_toConsumableArray(a),_toConsumableArray(n.map((function(e){return s[s[r].object[e]]})))),s.length>=o&&(s=(0,_cloneHelpers.linkReferences)(s))};do{u()}while(a.length>0);return(0,_cloneHelpers.linkReferences)(s)[0].object};exports.cloneObject=cloneObject;var mergeObjectsBase=function(e,r,t,o){return emptyObject(o)?o:reduceObject(o,(function(e,o,n){return setValue(n,t[n]?r(t[n],o):o,e)}),e?t:cloneObject(t))},mergeObjects=function e(){for(var r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return 2===t.length?mergeObjectsBase(!1,e,t[0],t[1]):1===t.length?cloneObject(t[0]):t.reduce((0,_functions.curry)(mergeObjectsBase)(!1,e),{})};exports.mergeObjects=mergeObjects;var mergeObjectsMutable=function e(){for(var r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];return 2===t.length?mergeObjectsBase(!0,e,t[0],t[1]):1===t.length?t[0]:t.reduce((0,_functions.curry)(mergeObjectsBase)(!0,e),{})};exports.mergeObjectsMutable=mergeObjectsMutable;